{"ast":null,"code":"var _jsxFileName = \"D:\\\\SIH\\\\Sample\\\\Echolink-videointercom\\\\src\\\\components\\\\Settings\\\\LanguageRegion.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LanguageRegion = ({\n  darkMode\n}) => {\n  _s();\n  const [language, setLanguage] = useState('English');\n  const [region, setRegion] = useState('United States');\n  useEffect(() => {\n    // Fetch language and region settings from the backend\n    fetch('http://localhost:5000/api/language-region').then(response => response.json()).then(data => {\n      setLanguage(data.language);\n      setRegion(data.region);\n    }).catch(error => console.error('Error fetching language and region settings:', error));\n  }, []);\n  const handleSave = () => {\n    // Save language and region settings to the backend\n    fetch('http://localhost:5000/api/language-region', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        language,\n        region\n      })\n    }).then(response => response.json()).then(data => {\n      alert('Language and region settings saved successfully!');\n    }).catch(error => console.error('Error saving language and region settings:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `p-6 rounded-lg shadow-md ${darkMode ? 'bg-gray-800 text-white' : 'bg-white text-gray-900'} transition-all`,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Language & Region\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block\",\n          children: \"Language\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: `mt-1 p-2 w-full border rounded-lg focus:outline-none ${darkMode ? 'bg-gray-700 border-gray-600 text-white' : 'bg-gray-100 border-gray-300'}`,\n          value: language,\n          onChange: e => setLanguage(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"English\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Spanish\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"French\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block\",\n          children: \"Region\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: `mt-1 p-2 w-full border rounded-lg focus:outline-none ${darkMode ? 'bg-gray-700 border-gray-600 text-white' : 'bg-gray-100 border-gray-300'}`,\n          value: region,\n          onChange: e => setRegion(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"United States\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"India\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"UK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        className: `mt-4 py-2 px-4 rounded-lg font-semibold ${darkMode ? 'bg-blue-600 hover:bg-blue-500' : 'bg-blue-500 hover:bg-blue-400'} text-white`,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(LanguageRegion, \"T3+nxUKeeuPLyaZGm7XyFtbIq8Q=\");\n_c = LanguageRegion;\nexport default LanguageRegion;\nvar _c;\n$RefreshReg$(_c, \"LanguageRegion\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","LanguageRegion","darkMode","_s","language","setLanguage","region","setRegion","fetch","then","response","json","data","catch","error","console","handleSave","method","headers","body","JSON","stringify","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["D:/SIH/Sample/Echolink-videointercom/src/components/Settings/LanguageRegion.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst LanguageRegion = ({ darkMode }) => {\r\n  const [language, setLanguage] = useState('English');\r\n  const [region, setRegion] = useState('United States');\r\n\r\n  useEffect(() => {\r\n    // Fetch language and region settings from the backend\r\n    fetch('http://localhost:5000/api/language-region')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setLanguage(data.language);\r\n        setRegion(data.region);\r\n      })\r\n      .catch(error => console.error('Error fetching language and region settings:', error));\r\n  }, []);\r\n\r\n  const handleSave = () => {\r\n    // Save language and region settings to the backend\r\n    fetch('http://localhost:5000/api/language-region', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ language, region }),\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        alert('Language and region settings saved successfully!');\r\n      })\r\n      .catch(error => console.error('Error saving language and region settings:', error));\r\n  };\r\n\r\n  return (\r\n    <div className={`p-6 rounded-lg shadow-md ${darkMode ? 'bg-gray-800 text-white' : 'bg-white text-gray-900'} transition-all`}>\r\n      <h2 className=\"text-2xl font-bold mb-4\">Language & Region</h2>\r\n      <div className=\"space-y-4\">\r\n        <div>\r\n          <label className=\"block\">Language</label>\r\n          <select\r\n            className={`mt-1 p-2 w-full border rounded-lg focus:outline-none ${darkMode ? 'bg-gray-700 border-gray-600 text-white' : 'bg-gray-100 border-gray-300'}`}\r\n            value={language}\r\n            onChange={(e) => setLanguage(e.target.value)}\r\n          >\r\n            <option>English</option>\r\n            <option>Spanish</option>\r\n            <option>French</option>\r\n          </select>\r\n        </div>\r\n        <div>\r\n          <label className=\"block\">Region</label>\r\n          <select\r\n            className={`mt-1 p-2 w-full border rounded-lg focus:outline-none ${darkMode ? 'bg-gray-700 border-gray-600 text-white' : 'bg-gray-100 border-gray-300'}`}\r\n            value={region}\r\n            onChange={(e) => setRegion(e.target.value)}\r\n          >\r\n            <option>United States</option>\r\n            <option>India</option>\r\n            <option>UK</option>\r\n          </select>\r\n        </div>\r\n        <button\r\n          onClick={handleSave}\r\n          className={`mt-4 py-2 px-4 rounded-lg font-semibold ${darkMode ? 'bg-blue-600 hover:bg-blue-500' : 'bg-blue-500 hover:bg-blue-400'} text-white`}\r\n        >\r\n          Save\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LanguageRegion;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}