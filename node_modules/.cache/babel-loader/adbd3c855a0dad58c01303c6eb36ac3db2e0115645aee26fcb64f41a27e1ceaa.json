{"ast":null,"code":"var _jsxFileName = \"D:\\\\SIH\\\\Sample\\\\Echolink-videointercom\\\\src\\\\components\\\\Admin\\\\ForgotPassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { FaUser, FaLock } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForgotPassword = ({\n  darkMode\n}) => {\n  _s();\n  const [adminUsername, setAdminUsername] = useState('');\n  const [targetUsername, setTargetUsername] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const handleResetPassword = async () => {\n    try {\n      const response = await fetch('https://your-backend-api/reset-password', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          adminUsername,\n          targetUsername,\n          newPassword\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setMessage('Password reset successful!');\n      } else {\n        setMessage(data.message || 'Failed to reset password.');\n      }\n    } catch (error) {\n      console.error('Error resetting password:', error);\n      setMessage('An error occurred while resetting the password.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: ` max-w-md mx-auto p-6  ${darkMode ? 'bg-gray-800 text-white' : 'bg-white'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: `text-3xl font-bold mb-6 text-center ${darkMode ? 'text-white' : 'text-gray-800'}`,\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        handleResetPassword();\n      },\n      className: \"space-y-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"adminUsername\",\n          className: `block text-sm font-medium ${darkMode ? 'text-gray-300' : 'text-gray-700'}`,\n          children: \"Your Admin Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"adminUsername\",\n          value: adminUsername,\n          onChange: e => setAdminUsername(e.target.value),\n          required: true,\n          className: `mt-1 block w-full pl-10 sm:text-sm border-gray-300 rounded-md ${darkMode ? 'bg-gray-600 text-white' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"targetUsername\",\n          className: `block text-sm font-medium ${darkMode ? 'text-gray-300' : 'text-gray-700'}`,\n          children: \"Target Admin Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"targetUsername\",\n          value: targetUsername,\n          onChange: e => setTargetUsername(e.target.value),\n          required: true,\n          className: `mt-1 block w-full pl-10 sm:text-sm border-gray-300 rounded-md ${darkMode ? 'bg-gray-600 text-white' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"newPassword\",\n          className: `block text-sm font-medium ${darkMode ? 'text-gray-300' : 'text-gray-700'}`,\n          children: \"New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"newPassword\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value),\n          required: true,\n          className: `mt-1 block w-full pl-10 sm:text-sm border-gray-300 rounded-md ${darkMode ? 'bg-gray-600 text-white' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"w-full bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded-md\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-4 text-center text-sm\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(ForgotPassword, \"yJNq7ywtY8PdmAw920hj0O99Nk8=\");\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","FaUser","FaLock","jsxDEV","_jsxDEV","ForgotPassword","darkMode","_s","adminUsername","setAdminUsername","targetUsername","setTargetUsername","newPassword","setNewPassword","message","setMessage","handleResetPassword","response","fetch","method","headers","body","JSON","stringify","data","json","ok","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","e","preventDefault","htmlFor","type","id","value","onChange","target","required","_c","$RefreshReg$"],"sources":["D:/SIH/Sample/Echolink-videointercom/src/components/Admin/ForgotPassword.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { FaUser, FaLock } from 'react-icons/fa';\r\n\r\nconst ForgotPassword = ({ darkMode }) => {\r\n  const [adminUsername, setAdminUsername] = useState('');\r\n  const [targetUsername, setTargetUsername] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleResetPassword = async () => {\r\n    try {\r\n      const response = await fetch('https://your-backend-api/reset-password', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ adminUsername, targetUsername, newPassword }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setMessage('Password reset successful!');\r\n      } else {\r\n        setMessage(data.message || 'Failed to reset password.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error resetting password:', error);\r\n      setMessage('An error occurred while resetting the password.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={` max-w-md mx-auto p-6  ${darkMode ? 'bg-gray-800 text-white' : 'bg-white'}`}>\r\n      <h2 className={`text-3xl font-bold mb-6 text-center ${darkMode ? 'text-white' : 'text-gray-800'}`}>Reset Password</h2>\r\n      <form\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          handleResetPassword();\r\n        }}\r\n        className=\"space-y-6\"\r\n      >\r\n        <div>\r\n          <label htmlFor=\"adminUsername\" className={`block text-sm font-medium ${darkMode ? 'text-gray-300' : 'text-gray-700'}`}>\r\n            Your Admin Username\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"adminUsername\"\r\n            value={adminUsername}\r\n            onChange={(e) => setAdminUsername(e.target.value)}\r\n            required\r\n            className={`mt-1 block w-full pl-10 sm:text-sm border-gray-300 rounded-md ${darkMode ? 'bg-gray-600 text-white' : ''}`}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"targetUsername\" className={`block text-sm font-medium ${darkMode ? 'text-gray-300' : 'text-gray-700'}`}>\r\n            Target Admin Username\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"targetUsername\"\r\n            value={targetUsername}\r\n            onChange={(e) => setTargetUsername(e.target.value)}\r\n            required\r\n            className={`mt-1 block w-full pl-10 sm:text-sm border-gray-300 rounded-md ${darkMode ? 'bg-gray-600 text-white' : ''}`}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"newPassword\" className={`block text-sm font-medium ${darkMode ? 'text-gray-300' : 'text-gray-700'}`}>\r\n            New Password\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"newPassword\"\r\n            value={newPassword}\r\n            onChange={(e) => setNewPassword(e.target.value)}\r\n            required\r\n            className={`mt-1 block w-full pl-10 sm:text-sm border-gray-300 rounded-md ${darkMode ? 'bg-gray-600 text-white' : ''}`}\r\n          />\r\n        </div>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"w-full bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded-md\"\r\n        >\r\n          Reset Password\r\n        </button>\r\n        {message && <p className=\"mt-4 text-center text-sm\">{message}</p>}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}