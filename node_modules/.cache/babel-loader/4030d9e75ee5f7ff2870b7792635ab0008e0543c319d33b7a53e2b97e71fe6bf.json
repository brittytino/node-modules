{"ast":null,"code":"var _jsxFileName = \"D:\\\\SIH\\\\Sample\\\\Echolink-videointercom\\\\src\\\\components\\\\CallLog.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\n\n// Helper function to format date from \"start_stamp\"\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatDate = startStamp => {\n  const date = new Date(startStamp); // Convert to Date object\n  return date.toLocaleDateString('en-US'); // Return the date portion (MM/DD/YYYY format)\n};\n\n// Helper function to extract and format time with AM/PM from \"start_stamp\"\nconst formatTime = startStamp => {\n  const date = new Date(startStamp); // Convert to Date object\n  return date.toLocaleTimeString('en-US', {\n    hour12: true\n  }); // Convert to 12-hour time format with AM/PM\n};\n\n// Helper function to calculate duration in minutes and seconds\nconst calculateDuration = duration => {\n  const minutes = Math.floor(duration / 60);\n  const seconds = duration % 60;\n  return `${minutes}m ${seconds}s`; // Return as 'X m Y s'\n};\nconst Cdr = ({\n  darkMode\n}) => {\n  _s();\n  const [cdrLogs, setCdrLogs] = useState([]);\n\n  // Function to fetch data from the Express server\n  const fetchData = () => {\n    fetch('https://server-ou54.onrender.com/webapi/core/cdr') // Use Render server URL\n    .then(response => response.json()).then(data => {\n      // Sort the data in descending order by \"start_stamp\"\n      const sortedData = data.sort((a, b) => new Date(b.start_stamp) - new Date(a.start_stamp));\n      setCdrLogs(sortedData); // Set the sorted data to cdrLogs state\n    }).catch(error => console.error('Error fetching data:', error));\n  };\n  useEffect(() => {\n    fetchData(); // Initial fetch\n    const interval = setInterval(fetchData, 5000); // Poll every 5 seconds\n\n    return () => clearInterval(interval); // Clear interval on component unmount\n  }, []); // Empty dependency array means it runs only on mount and unmount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `p-6 rounded-lg shadow-md ${darkMode ? 'bg-gray-800 text-white' : 'bg-white text-gray-900'} transition-all`,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-semibold mb-6 text-center\",\n      children: \"Call Log\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-x-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"min-w-full table-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: `${darkMode ? 'bg-gray-700 text-gray-300' : 'bg-gray-100 text-gray-700'}`,\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-3 px-4 text-left text-sm sm:text-base\",\n              children: \"S.No.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-3 px-4 text-left text-sm sm:text-base\",\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-3 px-4 text-left text-sm sm:text-base\",\n              children: \"Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-3 px-4 text-left text-sm sm:text-base\",\n              children: \"Caller\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-3 px-4 text-left text-sm sm:text-base\",\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-3 px-4 text-left text-sm sm:text-base\",\n              children: \"Duration\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: cdrLogs.length > 0 ? cdrLogs.map((log, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: `${index % 2 === 0 ? darkMode ? 'bg-gray-700' : 'bg-gray-50' : darkMode ? 'bg-gray-600' : 'bg-gray-200'} hover:${darkMode ? 'bg-gray-500' : 'bg-gray-300'} transition-colors`,\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-3 px-4 text-sm sm:text-base\",\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-3 px-4 text-sm sm:text-base\",\n              children: formatDate(log.start_stamp)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-3 px-4 text-sm sm:text-base\",\n              children: formatTime(log.start_stamp)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-3 px-4 text-sm sm:text-base\",\n              children: log.caller_id_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-3 px-4 text-sm sm:text-base\",\n              children: \"NA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-3 px-4 text-sm sm:text-base\",\n              children: calculateDuration(log.duration)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }, this)]\n          }, log.serial_number, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"6\",\n              className: \"py-4 text-center text-lg text-gray-500\",\n              children: \"No call logs available.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Cdr, \"d9Y6F47iBcPHc4BObQO7Sl5WhyQ=\");\n_c = Cdr;\nexport default Cdr;\nvar _c;\n$RefreshReg$(_c, \"Cdr\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","formatDate","startStamp","date","Date","toLocaleDateString","formatTime","toLocaleTimeString","hour12","calculateDuration","duration","minutes","Math","floor","seconds","Cdr","darkMode","_s","cdrLogs","setCdrLogs","fetchData","fetch","then","response","json","data","sortedData","sort","a","b","start_stamp","catch","error","console","interval","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","log","index","caller_id_name","serial_number","colSpan","_c","$RefreshReg$"],"sources":["D:/SIH/Sample/Echolink-videointercom/src/components/CallLog.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\n// Helper function to format date from \"start_stamp\"\r\nconst formatDate = (startStamp) => {\r\n  const date = new Date(startStamp); // Convert to Date object\r\n  return date.toLocaleDateString('en-US'); // Return the date portion (MM/DD/YYYY format)\r\n};\r\n\r\n// Helper function to extract and format time with AM/PM from \"start_stamp\"\r\nconst formatTime = (startStamp) => {\r\n  const date = new Date(startStamp); // Convert to Date object\r\n  return date.toLocaleTimeString('en-US', { hour12: true }); // Convert to 12-hour time format with AM/PM\r\n};\r\n\r\n// Helper function to calculate duration in minutes and seconds\r\nconst calculateDuration = (duration) => {\r\n  const minutes = Math.floor(duration / 60);\r\n  const seconds = duration % 60;\r\n  return `${minutes}m ${seconds}s`; // Return as 'X m Y s'\r\n};\r\n\r\nconst Cdr = ({ darkMode }) => {\r\n  const [cdrLogs, setCdrLogs] = useState([]);\r\n\r\n  // Function to fetch data from the Express server\r\n  const fetchData = () => {\r\n    fetch('https://server-ou54.onrender.com/webapi/core/cdr') // Use Render server URL\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        // Sort the data in descending order by \"start_stamp\"\r\n        const sortedData = data.sort((a, b) => new Date(b.start_stamp) - new Date(a.start_stamp));\r\n        setCdrLogs(sortedData); // Set the sorted data to cdrLogs state\r\n      })\r\n      .catch((error) => console.error('Error fetching data:', error));\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData(); // Initial fetch\r\n    const interval = setInterval(fetchData, 5000); // Poll every 5 seconds\r\n\r\n    return () => clearInterval(interval); // Clear interval on component unmount\r\n  }, []); // Empty dependency array means it runs only on mount and unmount\r\n\r\n  return (\r\n    <div\r\n      className={`p-6 rounded-lg shadow-md ${\r\n        darkMode ? 'bg-gray-800 text-white' : 'bg-white text-gray-900'\r\n      } transition-all`}\r\n    >\r\n      <h1 className=\"text-2xl font-semibold mb-6 text-center\">Call Log</h1>\r\n      <div className=\"overflow-x-auto\">\r\n        <table className=\"min-w-full table-auto\">\r\n          <thead\r\n            className={`${\r\n              darkMode ? 'bg-gray-700 text-gray-300' : 'bg-gray-100 text-gray-700'\r\n            }`}\r\n          >\r\n            <tr>\r\n              <th className=\"py-3 px-4 text-left text-sm sm:text-base\">S.No.</th>\r\n              <th className=\"py-3 px-4 text-left text-sm sm:text-base\">Date</th>\r\n              <th className=\"py-3 px-4 text-left text-sm sm:text-base\">Time</th>\r\n              <th className=\"py-3 px-4 text-left text-sm sm:text-base\">Caller</th>\r\n              <th className=\"py-3 px-4 text-left text-sm sm:text-base\">Type</th>\r\n              <th className=\"py-3 px-4 text-left text-sm sm:text-base\">Duration</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {cdrLogs.length > 0 ? (\r\n              cdrLogs.map((log, index) => (\r\n                <tr\r\n                  key={log.serial_number}\r\n                  className={`${\r\n                    index % 2 === 0\r\n                      ? darkMode\r\n                        ? 'bg-gray-700'\r\n                        : 'bg-gray-50'\r\n                      : darkMode\r\n                      ? 'bg-gray-600'\r\n                      : 'bg-gray-200'\r\n                  } hover:${\r\n                    darkMode ? 'bg-gray-500' : 'bg-gray-300'\r\n                  } transition-colors`}\r\n                >\r\n                  <td className=\"py-3 px-4 text-sm sm:text-base\">{index + 1}</td> {/* Generate S.No. */}\r\n                  <td className=\"py-3 px-4 text-sm sm:text-base\">{formatDate(log.start_stamp)}</td> {/* Extract date */}\r\n                  <td className=\"py-3 px-4 text-sm sm:text-base\">{formatTime(log.start_stamp)}</td> {/* Extract time */}\r\n                  <td className=\"py-3 px-4 text-sm sm:text-base\">{log.caller_id_name}</td>\r\n                  <td className=\"py-3 px-4 text-sm sm:text-base\">NA</td>\r\n                  <td className=\"py-3 px-4 text-sm sm:text-base\">\r\n                    {calculateDuration(log.duration)}\r\n                  </td>\r\n                </tr>\r\n              ))\r\n            ) : (\r\n              <tr>\r\n                <td\r\n                  colSpan=\"6\"\r\n                  className=\"py-4 text-center text-lg text-gray-500\"\r\n                >\r\n                  No call logs available.\r\n                </td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cdr;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}