{"ast":null,"code":"var _jsxFileName = \"D:\\\\SIH\\\\Sample\\\\Echolink-videointercom\\\\src\\\\components\\\\CallLog.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { FiPhone, FiArrowUp, FiArrowDown } from 'react-icons/fi';\n\n// Helper function to format date\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatDate = dateString => {\n  const date = new Date(dateString);\n  return date.toLocaleDateString('en-US');\n};\n\n// Helper function to format time\nconst formatTime = dateString => {\n  const date = new Date(dateString);\n  return date.toLocaleTimeString('en-US', {\n    hour: '2-digit',\n    minute: '2-digit',\n    hour12: true\n  });\n};\nconst CallLogPage = ({\n  darkMode\n}) => {\n  _s();\n  const [callLogs, setCallLogs] = useState([]);\n\n  // Fetch call logs from the server\n  const fetchCallLogs = async () => {\n    try {\n      const response = await fetch('https://server-ou54.onrender.com/webapi/core/cdr');\n      const data = await response.json();\n      const sortedLogs = data.sort((a, b) => new Date(b.start_stamp) - new Date(a.start_stamp));\n      setCallLogs(sortedLogs);\n    } catch (error) {\n      console.error('Error fetching call logs:', error);\n    }\n  };\n  useEffect(() => {\n    fetchCallLogs(); // Fetch call logs initially\n    const interval = setInterval(fetchCallLogs, 5000); // Refresh call logs every 5 seconds\n    return () => clearInterval(interval); // Cleanup on unmount\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `p-6 rounded-lg shadow-md max-w-3xl mx-auto ${darkMode ? 'bg-gray-800 text-white' : 'bg-white text-gray-900'} transition-all`,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-semibold mb-6 text-center\",\n      children: \"Call Log\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-4\",\n      children: callLogs.length > 0 ? callLogs.map((log, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `p-4 rounded-lg shadow-sm flex items-center justify-between ${darkMode ? 'bg-gray-700' : 'bg-gray-100'} hover:${darkMode ? 'bg-gray-600' : 'bg-gray-200'} transition-all`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-center w-10 h-10 rounded-full bg-gray-200 dark:bg-gray-600\",\n            children: [log.call_direction === 'incoming' && /*#__PURE__*/_jsxDEV(FiArrowDown, {\n              className: \"text-green-500 text-xl\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 57\n            }, this), log.call_direction === 'outgoing' && /*#__PURE__*/_jsxDEV(FiArrowUp, {\n              className: \"text-blue-500 text-xl\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 57\n            }, this), log.call_direction === 'missed' && /*#__PURE__*/_jsxDEV(FiPhone, {\n              className: \"text-red-500 text-xl\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 55\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-semibold\",\n              children: log.caller_id_name || 'Unknown'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-500 dark:text-gray-400\",\n              children: log.caller_id_number || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-500 dark:text-gray-400\",\n            children: [formatDate(log.start_stamp), \" at \", formatTime(log.start_stamp)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm font-medium\",\n            children: [\"Duration: \", Math.floor(log.duration / 60), \"m \", log.duration % 60, \"s\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this)]\n      }, log.serial_number || index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center text-lg text-gray-500\",\n        children: \"No call logs available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(CallLogPage, \"aDDOUqBcVQ35AnjCV/m2ZEd/X7M=\");\n_c = CallLogPage;\nexport default CallLogPage;\nvar _c;\n$RefreshReg$(_c, \"CallLogPage\");","map":{"version":3,"names":["React","useState","useEffect","FiPhone","FiArrowUp","FiArrowDown","jsxDEV","_jsxDEV","formatDate","dateString","date","Date","toLocaleDateString","formatTime","toLocaleTimeString","hour","minute","hour12","CallLogPage","darkMode","_s","callLogs","setCallLogs","fetchCallLogs","response","fetch","data","json","sortedLogs","sort","a","b","start_stamp","error","console","interval","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","log","index","call_direction","caller_id_name","caller_id_number","Math","floor","duration","serial_number","_c","$RefreshReg$"],"sources":["D:/SIH/Sample/Echolink-videointercom/src/components/CallLog.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { FiPhone, FiArrowUp, FiArrowDown } from 'react-icons/fi';\r\n\r\n// Helper function to format date\r\nconst formatDate = (dateString) => {\r\n  const date = new Date(dateString);\r\n  return date.toLocaleDateString('en-US');\r\n};\r\n\r\n// Helper function to format time\r\nconst formatTime = (dateString) => {\r\n  const date = new Date(dateString);\r\n  return date.toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit', hour12: true });\r\n};\r\n\r\nconst CallLogPage = ({ darkMode }) => {\r\n  const [callLogs, setCallLogs] = useState([]);\r\n\r\n  // Fetch call logs from the server\r\n  const fetchCallLogs = async () => {\r\n    try {\r\n      const response = await fetch('https://server-ou54.onrender.com/webapi/core/cdr');\r\n      const data = await response.json();\r\n      const sortedLogs = data.sort((a, b) => new Date(b.start_stamp) - new Date(a.start_stamp));\r\n      setCallLogs(sortedLogs);\r\n    } catch (error) {\r\n      console.error('Error fetching call logs:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCallLogs(); // Fetch call logs initially\r\n    const interval = setInterval(fetchCallLogs, 5000); // Refresh call logs every 5 seconds\r\n    return () => clearInterval(interval); // Cleanup on unmount\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className={`p-6 rounded-lg shadow-md max-w-3xl mx-auto ${\r\n        darkMode ? 'bg-gray-800 text-white' : 'bg-white text-gray-900'\r\n      } transition-all`}\r\n    >\r\n      <h1 className=\"text-2xl font-semibold mb-6 text-center\">Call Log</h1>\r\n      <div className=\"space-y-4\">\r\n        {callLogs.length > 0 ? (\r\n          callLogs.map((log, index) => (\r\n            <div\r\n              key={log.serial_number || index}\r\n              className={`p-4 rounded-lg shadow-sm flex items-center justify-between ${\r\n                darkMode ? 'bg-gray-700' : 'bg-gray-100'\r\n              } hover:${darkMode ? 'bg-gray-600' : 'bg-gray-200'} transition-all`}\r\n            >\r\n              <div className=\"flex items-center space-x-4\">\r\n                <div className=\"flex items-center justify-center w-10 h-10 rounded-full bg-gray-200 dark:bg-gray-600\">\r\n                  {log.call_direction === 'incoming' && <FiArrowDown className=\"text-green-500 text-xl\" />}\r\n                  {log.call_direction === 'outgoing' && <FiArrowUp className=\"text-blue-500 text-xl\" />}\r\n                  {log.call_direction === 'missed' && <FiPhone className=\"text-red-500 text-xl\" />}\r\n                </div>\r\n                <div>\r\n                  <h3 className=\"text-lg font-semibold\">\r\n                    {log.caller_id_name || 'Unknown'}\r\n                  </h3>\r\n                  <p className=\"text-sm text-gray-500 dark:text-gray-400\">{log.caller_id_number || 'N/A'}</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"text-right\">\r\n                <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                  {formatDate(log.start_stamp)} at {formatTime(log.start_stamp)}\r\n                </p>\r\n                <p className=\"text-sm font-medium\">\r\n                  Duration: {Math.floor(log.duration / 60)}m {log.duration % 60}s\r\n                </p>\r\n              </div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p className=\"text-center text-lg text-gray-500\">No call logs available.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CallLogPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}